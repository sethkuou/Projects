JOE #00 R05 -> INITIALIZE;
LOADMEM R03 R04;
START:
JOE #00 R00 -> NOBUTTONS;
JOE #01 R00 -> SONGSELECT;
JOE #08 R00 -> UPPRESS;
JOE #02 R00 -> DOWNPRESS;
JOE #16 R00 -> LEFTPRESS;
JOE #04 R00 -> RIGHTPRESS;
Done.



INITIALIZE:
JAL -> INVERTLINE;
SET R05 <- #01;
JUMP -> START;

NOBUTTONS:
SET R02 <- #0;
JUMP -> START;

SONGSELECT:
JOE #01 R02 -> START;
SET R02 <- #01;
JOE #10 R01 -> SETCUSTOMNOTE;
JOE #00 R01 -> TWINKLE;
JOE #01 R01 -> STARWARS;
JOE #02 R01 -> SONGOFSTORMS;
JOE #03 R01 -> TETRIS;
JOE #04 R01 -> MIDNIGHTCLEAR;
JOE #09 R01 -> CUSTOM;
JUMP -> START;

SETCUSTOMNOTE:
SET R04 <- #16015;
LOADMEM R08 R03;
JOE R03 R04 -> REMOVECUSTOMNOTE;
JAL -> CLEARCOLUMN;
SETMEM R08 <- #16015;
ADD #01 R08;
SETMEM R08 <- #15503;
SUB #01 R08;
SET R03 <- #32751;
ADD R06 R03;
JOE #15 R07 -> WRITEA;
JOE #14 R07 -> WRITED;
JOE #13 R07 -> WRITEE;
JOE #12 R07 -> WRITEFSHARP;
JOE #11 R07 -> WRITEG;
JOE #10 R07 -> WRITEGSHARP;
JOE #09 R07 -> WRITEA2;
JOE #08 R07 -> WRITEB;
JOE #07 R07 -> WRITECSHARP;
JOE #06 R07 -> WRITED2;
JOE #05 R07 -> WRITEDSHARP;
JOE #04 R07 -> WRITEE2;
JOE #03 R07 -> WRITEFSHARP2;
JOE #02 R07 -> WRITEG2;
JOE #01 R07 -> WRITEGSHARP2;
JOE #00 R07 -> WRITEA3;
JUMP -> START;

CLEARCOLUMN:
SET R03 <- #1938;
ADD R06 R03;
ADD R06 R03;
ADD R06 R03;
SET R04 <- #0;

CLEARLOOP:
JOE #16 R04 -> RETURN;
SETMEM R03 <- #8440;
ADD #01 R03;
SETMEM R03 <- #8440;
SUB #01 R03;
ADD #16 R03;
ADD #16 R03;
ADD #16 R03;
ADD #16 R03;
ADD #16 R03;
ADD #16 R03;
ADD #16 R03;
ADD #16 R03;
ADD #16 R03;
ADD #16 R03;
ADD #16 R03;
ADD #16 R03;
ADD #16 R03;
ADD #16 R03;
ADD #16 R03;
ADD #16 R03;
ADD #01 R04;
JUMP -> CLEARLOOP;

WRITEA:
SETMEM R03 <- #61696; //f100
JUMP -> START;

WRITED:
SETMEM R03 <- #61713; //f111
JUMP -> START;

WRITEE:
SETMEM R03 <- #61730; //f122
JUMP -> START;

WRITEFSHARP:
SETMEM R03 <- #61747; //f133
JUMP -> START;

WRITEG:
SETMEM R03 <- #61764; //f144
JUMP -> START;

WRITEGSHARP:
SETMEM R03 <- #61781; //f155
JUMP -> START;

WRITEA2:
SETMEM R03 <- #61798; //f166
JUMP -> START;

WRITEA3:
SETMEM R03 <- #61815; //f177
JUMP -> START;

WRITEB:
SETMEM R03 <- #61832;
JUMP -> START;

WRITECSHARP:
SETMEM R03 <- #61849;
JUMP -> START;

WRITED2:
SETMEM R03 <- #61866;
JUMP -> START;

WRITEDSHARP:
SETMEM R03 <- #61883;
JUMP -> START;

WRITEE2:
SETMEM R03 <- #61900;
JUMP -> START;

WRITEFSHARP2:
SETMEM R03 <- #61917;
JUMP -> START;

WRITEG2:
SETMEM R03 <- #61934;
JUMP -> START;

WRITEGSHARP2:
SETMEM R03 <- #61951;
JUMP -> START;

WRITEREST:
SETMEM R03 <- #61440;
JUMP -> START;

REMOVECUSTOMNOTE:
SET R03 <- #32751;
ADD R06 R03;
SETMEM R08 <- #143
ADD #01 R08;
SETMEM R08 <- #143;
SUB #01 R08;
JUMP -> WRITEREST;

UPPRESS:
JOE #01 R02 -> START;
SET R02 <- #01;
JOE #10 R01 -> CUSTOMUP;
JOE #00 R01 -> START;
JAL -> INVERTLINE;
SUB #01 R01;
JAL -> INVERTLINE;
JUMP -> START;

DOWNPRESS:
JOE #01 R02 -> START; //if button pressed last cycle, don't do anything
SET R02 <- #01;
JOE #10 R01 -> CUSTOMDOWN;
JOE #09 R01 -> CUSTOMDOWNSTART;
JAL -> INVERTLINE;
ADD #01 R01;
JAL -> INVERTLINE;
JUMP -> START;

LEFTPRESS:
JOE #01 R02 -> START;
SET R02 <- #01;
JOE #10 R01 -> CUSTOMLEFT;
JUMP -> START;

RIGHTPRESS:
JOE #01 R02 -> START;
SET R02 <- #01;
JOE #10 R01 -> CUSTOMRIGHT;
JUMP -> START;

INVERTLINE:
STORE R01 -> 0x0050;
LOAD R03 <- 0x0050;
SHIFTL #07 R03;    //We now have selection*128, or the first character of the row we'd like to invert
SET R04 <- #80;
ADD R03 R04;		//We now have selection*128 + 80, or the value we'd like to stop inverting on.

INVERTLOOP:
JOE R03 R04 -> RETURN;
INVERT R03;
ADD #01 R03;
JUMP -> INVERTLOOP;

RETURN:
RETURN;

CUSTOMDOWNSTART:
JAL -> INVERTLINE;
SET R01 <- #10;
SET R06 <- #0;
SET R07 <- #0;
SET R08 <- #1938;
JAL -> INVERTCELL;
JUMP -> START;

CUSTOMDOWN:
JOE #15 R07 -> START;
ADD #01 R07;
JAL -> INVERTCELL;
JAL -> ADD256R08;
JAL -> INVERTCELL;
JUMP -> START;

CUSTOMLEFT:
JOE #00 R06 -> START;
SUB #01 R06;
JAL -> INVERTCELL;
SUB #03 R08;
JAL -> INVERTCELL;
JUMP -> START;

CUSTOMRIGHT:
JOE #15 R06 -> START;
ADD #01 R06;
JAL -> INVERTCELL;
ADD #03 R08;
JAL -> INVERTCELL;
JUMP -> START;

INVERTCELL:
INVERT R08;
ADD #01 R08;
INVERT R08;
SUB #01 R08;
RETURN;

ADD256R08:
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
RETURN;

SUB256R08:
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
RETURN;

CUSTOMUP:
JOE #00 R07 -> REENTERSONGLIST;
SUB #01 R07;
JAL -> INVERTCELL;
JAL -> SUB256R08;
JAL -> INVERTCELL;
JUMP -> START;

REENTERSONGLIST:
JAL -> INVERTCELL;
SET R01 <- #9;
JAL -> INVERTLINE;
JUMP -> START;

