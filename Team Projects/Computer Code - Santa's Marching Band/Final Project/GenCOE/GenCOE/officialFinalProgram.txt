JOE #00 R05 -> INITIALIZE;
START:
JOE #00 R00 -> NOBUTTONS;
JOE #01 R00 -> SONGSELECT;
JOE #08 R00 -> UPPRESS;
JOE #02 R00 -> DOWNPRESS;
JOE #16 R00 -> LEFTPRESS;
JOE #04 R00 -> RIGHTPRESS;
Done.



INITIALIZE:
SET R08 <- #0;
SETMEM R08 <- #29944;
JAL -> INVERTLINE;
SET R05 <- #01;
JUMP -> START;

NOBUTTONS:
SET R02 <- #0;
JUMP -> START;

SONGSELECT:
JOE #10 R01 -> SETCUSTOMNOTE;
JOE #00 R01 -> TWINKLE;
JOE #01 R01 -> STARWARS;
JOE #02 R01 -> SONGOFSTORMS;
JOE #09 R01 -> CUSTOM;
JUMP -> START;

SETCUSTOMNOTE:
JUMP -> START;

UPPRESS:
JOE #01 R02 -> START;
SET R02 <- #01;
JOE #10 R01 -> CUSTOMUP;
JOE #00 R01 -> START;
JAL -> INVERTLINE;
SUB #01 R01;
JAL -> INVERTLINE;
JUMP -> START;

DOWNPRESS:
JOE #01 R02 -> START; //if button pressed last cycle, don't do anything
SET R02 <- #01;
JOE #10 R01 -> CUSTOMDOWN;
JOE #09 R01 -> CUSTOMDOWNSTART;
JAL -> INVERTLINE;
ADD #01 R01;
JAL -> INVERTLINE;
JUMP -> START;

LEFTPRESS:
JOE #01 R02 -> START;
SET R02 <- #01;
JOE #10 R01 -> CUSTOMLEFT;
JUMP -> START;

RIGHTPRESS:
JOE #01 R02 -> START;
SET R02 <- #01;
JOE #10 R01 -> CUSTOMRIGHT;
JUMP -> START;

INVERTLINE:
STORE R01 -> 0x0050;
LOAD R03 <- 0x0050;
SHIFTL #07 R03;    //We now have selection*128, or the first character of the row we'd like to invert
SET R04 <- #80;
ADD R03 R04;		//We now have selection*128 + 80, or the value we'd like to stop inverting on.
INVERTLOOP:
JOE R03 R04 -> RETURN;
INVERT R03;
ADD #01 R03;
JUMP -> INVERTLOOP;

RETURN:
RETURN;

CUSTOMDOWNSTART:
JAL -> INVERTLINE;
SET R01 <- #10;
SET R06 <- #0;
SET R07 <- #0;
SET R08 <- #1938;
JAL -> INVERTCELL;
JUMP -> START;

CUSTOMDOWN:
JOE #15 R07 -> START;
ADD #01 R07;
JAL -> INVERTCELL;
JAL -> ADD256R08;
JAL -> INVERTCELL;
JUMP -> START;

CUSTOMLEFT:
JOE #00 R06 -> START;
SUB #01 R06;
JAL -> INVERTCELL;
SUB #03 R08;
JAL -> INVERTCELL;
JUMP -> START;

CUSTOMRIGHT:
JOE #15 R06 -> START;
ADD #01 R06;
JAL -> INVERTCELL;
ADD #03 R08;
JAL -> INVERTCELL;
JUMP -> START;

INVERTCELL:
INVERT R08;
ADD #01 R08;
INVERT R08;
SUB #01 R08;
RETURN;

ADD256R08:
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
ADD #16 R08;
RETURN;

SUB256R08:
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
SUB #16 R08;
RETURN;

CUSTOMUP:
JOE #00 R07 -> REENTERSONGLIST;
SUB #01 R07;
JAL -> INVERTCELL;
JAL -> SUB256R08;
JAL -> INVERTCELL;
JUMP -> START;

REENTERSONGLIST:
JAL -> INVERTCELL;
SET R01 <- #9;
JAL -> INVERTLINE;
JUMP -> START;

